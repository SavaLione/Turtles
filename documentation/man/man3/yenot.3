.TH "yenot" 3 "Сб 28 Апр 2018" "Yenot" \" -*- nroff -*-
.ad l
.nh
.SH NAME
yenot
.SH SYNOPSIS
.br
.PP
.SS "Переменные"

.in +1c
.ti -1c
.RI "const char \fBsettings_file_name\fP [] = '\&./config\&.ini'"
.br
.ti -1c
.RI "const char \fBlogger_file_name\fP [] = 'Yenot\&.log'"
.br
.ti -1c
.RI "const char \fBdatabase_file_name\fP [] = 'database\&.xml'"
.br
.ti -1c
.RI "const char \fBdatabase_name\fP [] = 'database'"
.br
.ti -1c
.RI "const char \fBextensions_database_member\fP [] = '\&.xml'"
.br
.ti -1c
.RI "const char \fBextensions_database_member_photo\fP [] = '\&.png'"
.br
.ti -1c
.RI "const int \fBbuffer_size\fP = 128"
.br
.ti -1c
.RI "const char \fBsettings_block_core\fP [] = 'Core'"
.br
.ti -1c
.RI "const char \fBsettings_block_default\fP [] = 'General'"
.br
.ti -1c
.RI "const char \fBsettings_fastmode\fP [] = 'fMode'"
.br
.ti -1c
.RI "const char \fBsettings_fastmode_value\fP [] = '0'"
.br
.ti -1c
.RI "const int \fBsettings_fastmode_value_int\fP = 0"
.br
.ti -1c
.RI "const char \fBsettings_noiseReduction\fP [] = 'nReduction'"
.br
.ti -1c
.RI "const char \fBsettings_noiseReduction_value\fP [] = '1'"
.br
.ti -1c
.RI "const int \fBsettings_noiseReduction_value_int\fP = 1"
.br
.ti -1c
.RI "const char \fBsettings_machineLearning\fP [] = 'mLearning'"
.br
.ti -1c
.RI "const char \fBsettings_machineLearning_value\fP [] = '1'"
.br
.ti -1c
.RI "const int \fBsettings_machineLearning_value_int\fP = 1"
.br
.ti -1c
.RI "const char \fBsettings_lineDetection\fP [] = 'lDetection'"
.br
.ti -1c
.RI "const char \fBsettings_lineDetection_value\fP [] = '1'"
.br
.ti -1c
.RI "const int \fBsettings_lineDetection_value_int\fP = 1"
.br
.ti -1c
.RI "const char \fBuse_detection\fP [] = 'detection'"
.br
.ti -1c
.RI "const char \fBuse_detection_value\fP [] = '1'"
.br
.ti -1c
.RI "const int \fBuse_detection_value_int\fP = 1"
.br
.ti -1c
.RI "const char \fBsave_processed_image\fP [] = 'sImage'"
.br
.ti -1c
.RI "const char \fBsave_processed_image_value\fP [] = '0'"
.br
.ti -1c
.RI "const int \fBsave_processed_image_value_int\fP = 0"
.br
.ti -1c
.RI "const char \fBsave_processed_image_name\fP [] = 'test\&.png'"
.br
.ti -1c
.RI "const int \fBdiameter_each_pixel\fP = 9"
.br
.ti -1c
.RI "const int \fBsigmaColor\fP = 75"
.br
.ti -1c
.RI "const int \fBsigmaSpace\fP = 75"
.br
.ti -1c
.RI "const int \fBgaussianblur_kernel_x\fP = 5"
.br
.ti -1c
.RI "const int \fBgaussianblur_kernel_y\fP = 5"
.br
.ti -1c
.RI "const int \fBblur_kernel_x\fP = 5"
.br
.ti -1c
.RI "const int \fBblur_kernel_y\fP = 5"
.br
.ti -1c
.RI "const char \fBsettings_block_logger\fP [] = 'Logger'"
.br
.ti -1c
.RI "const char \fBsettings_log\fP [] = 'log'"
.br
.ti -1c
.RI "const char \fBsettings_log_value\fP [] = '1'"
.br
.ti -1c
.RI "const char \fBsettings_logTime\fP [] = 'lTime'"
.br
.ti -1c
.RI "const char \fBsettings_logTime_value\fP [] = '1'"
.br
.ti -1c
.RI "const char \fBlogger_level_warning\fP [] = 'WARN'"
.br
.ti -1c
.RI "const char \fBlogger_level_error\fP [] = 'ERROR'"
.br
.ti -1c
.RI "const char \fBlogger_level_message\fP [] = 'MSG'"
.br
.ti -1c
.RI "const char \fBlogger_message_noiseRemoval\fP [] = 'Noise filter is disabled\&.'"
.br
.ti -1c
.RI "const char \fBlogger_message_lDetection\fP [] = 'Line \fBdetection\fP is disabled\&.'"
.br
.ti -1c
.RI "const char \fBlogger_message_fMode\fP [] = 'Fast mode enabled\&.'"
.br
.ti -1c
.RI "const char \fBlogger_message_cDir\fP [] = 'Folder created\&.'"
.br
.ti -1c
.RI "const char \fBlogger_message_cDir_not\fP [] = 'Folder not created\&.'"
.br
.ti -1c
.RI "const char \fBsettings_block_carModel\fP [] = 'carmodel'"
.br
.ti -1c
.RI "const char \fBsettings_carModel_listphoto\fP [] = 'listphoto'"
.br
.ti -1c
.RI "const char \fBsettings_carModel_example\fP [] = 'example'"
.br
.ti -1c
.RI "const char \fBsettings_carModel_example_description\fP [] = 'The car of model \\'Example\\''"
.br
.ti -1c
.RI "const char \fBsettings_carModel_example_file\fP [] = 'example\&.xml'"
.br
.ti -1c
.RI "const char \fBsettings_block_description\fP [] = 'description'"
.br
.ti -1c
.RI "const char \fBsettings_description_ifnotfound\fP [] = 'Not found'"
.br
.ti -1c
.RI "const char \fBsettings_description_example\fP [] = 'Example brand'"
.br
.ti -1c
.RI "const int \fBsettings_size_photo\fP = 512"
.br
.in -1c
.SH "Переменные"
.PP 
.SS "const int yenot::blur_kernel_x = 5"

.PP
См\&. определение в файле Yenot\&.h строка 66
.SS "const int yenot::blur_kernel_y = 5"

.PP
См\&. определение в файле Yenot\&.h строка 67
.SS "const int yenot::buffer_size = 128"

.PP
См\&. определение в файле Yenot\&.h строка 23
.SS "const char yenot::database_file_name[] = 'database\&.xml'"

.PP
См\&. определение в файле Yenot\&.h строка 17
.SS "const char yenot::database_name[] = 'database'"

.PP
См\&. определение в файле Yenot\&.h строка 18
.SS "const int yenot::diameter_each_pixel = 9"

.PP
См\&. определение в файле Yenot\&.h строка 59
.SS "const char yenot::extensions_database_member[] = '\&.xml'"

.PP
См\&. определение в файле Yenot\&.h строка 20
.SS "const char yenot::extensions_database_member_photo[] = '\&.png'"

.PP
См\&. определение в файле Yenot\&.h строка 21
.SS "const int yenot::gaussianblur_kernel_x = 5"

.PP
См\&. определение в файле Yenot\&.h строка 63
.SS "const int yenot::gaussianblur_kernel_y = 5"

.PP
См\&. определение в файле Yenot\&.h строка 64
.SS "const char yenot::logger_file_name[] = 'Yenot\&.log'"

.PP
См\&. определение в файле Yenot\&.h строка 16
.SS "const char yenot::logger_level_error[] = 'ERROR'"

.PP
См\&. определение в файле Yenot\&.h строка 81
.SS "const char yenot::logger_level_message[] = 'MSG'"

.PP
См\&. определение в файле Yenot\&.h строка 82
.SS "const char yenot::logger_level_warning[] = 'WARN'"

.PP
См\&. определение в файле Yenot\&.h строка 80
.SS "const char yenot::logger_message_cDir[] = 'Folder created\&.'"

.PP
См\&. определение в файле Yenot\&.h строка 90
.SS "const char yenot::logger_message_cDir_not[] = 'Folder not created\&.'"

.PP
См\&. определение в файле Yenot\&.h строка 91
.SS "const char yenot::logger_message_fMode[] = 'Fast mode enabled\&.'"

.PP
См\&. определение в файле Yenot\&.h строка 89
.SS "const char yenot::logger_message_lDetection[] = 'Line \fBdetection\fP is disabled\&.'"

.PP
См\&. определение в файле Yenot\&.h строка 88
.SS "const char yenot::logger_message_noiseRemoval[] = 'Noise filter is disabled\&.'"

.PP
См\&. определение в файле Yenot\&.h строка 87
.SS "const char yenot::save_processed_image[] = 'sImage'"

.PP
См\&. определение в файле Yenot\&.h строка 51
.SS "const char yenot::save_processed_image_name[] = 'test\&.png'"

.PP
См\&. определение в файле Yenot\&.h строка 54
.SS "const char yenot::save_processed_image_value[] = '0'"

.PP
См\&. определение в файле Yenot\&.h строка 52
.SS "const int yenot::save_processed_image_value_int = 0"

.PP
См\&. определение в файле Yenot\&.h строка 53
.SS "const char yenot::settings_block_carModel[] = 'carmodel'"

.PP
См\&. определение в файле Yenot\&.h строка 96
.SS "const char yenot::settings_block_core[] = 'Core'"

.PP
См\&. определение в файле Yenot\&.h строка 28
.SS "const char yenot::settings_block_default[] = 'General'"

.PP
См\&. определение в файле Yenot\&.h строка 29
.SS "const char yenot::settings_block_description[] = 'description'"

.PP
См\&. определение в файле Yenot\&.h строка 103
.SS "const char yenot::settings_block_logger[] = 'Logger'"

.PP
См\&. определение в файле Yenot\&.h строка 72
.SS "const char yenot::settings_carModel_example[] = 'example'"

.PP
См\&. определение в файле Yenot\&.h строка 99
.SS "const char yenot::settings_carModel_example_description[] = 'The car of model \\'Example\\''"

.PP
См\&. определение в файле Yenot\&.h строка 100
.SS "const char yenot::settings_carModel_example_file[] = 'example\&.xml'"

.PP
См\&. определение в файле Yenot\&.h строка 101
.SS "const char yenot::settings_carModel_listphoto[] = 'listphoto'"

.PP
См\&. определение в файле Yenot\&.h строка 97
.SS "const char yenot::settings_description_example[] = 'Example brand'"

.PP
См\&. определение в файле Yenot\&.h строка 105
.SS "const char yenot::settings_description_ifnotfound[] = 'Not found'"

.PP
См\&. определение в файле Yenot\&.h строка 104
.SS "const char yenot::settings_fastmode[] = 'fMode'"

.PP
См\&. определение в файле Yenot\&.h строка 31
.SS "const char yenot::settings_fastmode_value[] = '0'"

.PP
См\&. определение в файле Yenot\&.h строка 32
.SS "const int yenot::settings_fastmode_value_int = 0"

.PP
См\&. определение в файле Yenot\&.h строка 33
.SS "const char yenot::settings_file_name[] = '\&./config\&.ini'"

.PP
См\&. определение в файле Yenot\&.h строка 15
.SS "const char yenot::settings_lineDetection[] = 'lDetection'"

.PP
См\&. определение в файле Yenot\&.h строка 43
.SS "const char yenot::settings_lineDetection_value[] = '1'"

.PP
См\&. определение в файле Yenot\&.h строка 44
.SS "const int yenot::settings_lineDetection_value_int = 1"

.PP
См\&. определение в файле Yenot\&.h строка 45
.SS "const char yenot::settings_log[] = 'log'"

.PP
См\&. определение в файле Yenot\&.h строка 74
.SS "const char yenot::settings_log_value[] = '1'"

.PP
См\&. определение в файле Yenot\&.h строка 75
.SS "const char yenot::settings_logTime[] = 'lTime'"

.PP
См\&. определение в файле Yenot\&.h строка 77
.SS "const char yenot::settings_logTime_value[] = '1'"

.PP
См\&. определение в файле Yenot\&.h строка 78
.SS "const char yenot::settings_machineLearning[] = 'mLearning'"

.PP
См\&. определение в файле Yenot\&.h строка 39
.SS "const char yenot::settings_machineLearning_value[] = '1'"

.PP
См\&. определение в файле Yenot\&.h строка 40
.SS "const int yenot::settings_machineLearning_value_int = 1"

.PP
См\&. определение в файле Yenot\&.h строка 41
.SS "const char yenot::settings_noiseReduction[] = 'nReduction'"

.PP
См\&. определение в файле Yenot\&.h строка 35
.SS "const char yenot::settings_noiseReduction_value[] = '1'"

.PP
См\&. определение в файле Yenot\&.h строка 36
.SS "const int yenot::settings_noiseReduction_value_int = 1"

.PP
См\&. определение в файле Yenot\&.h строка 37
.SS "const int yenot::settings_size_photo = 512"

.PP
См\&. определение в файле Yenot\&.h строка 107
.SS "const int yenot::sigmaColor = 75"

.PP
См\&. определение в файле Yenot\&.h строка 60
.SS "const int yenot::sigmaSpace = 75"

.PP
См\&. определение в файле Yenot\&.h строка 61
.SS "const char yenot::use_detection[] = 'detection'"

.PP
См\&. определение в файле Yenot\&.h строка 47
.SS "const char yenot::use_detection_value[] = '1'"

.PP
См\&. определение в файле Yenot\&.h строка 48
.SS "const int yenot::use_detection_value_int = 1"

.PP
См\&. определение в файле Yenot\&.h строка 49
.SH "Автор"
.PP 
Автоматически создано Doxygen для Yenot из исходного текста\&.
