.TH "Core.cpp" 3 "Пт 4 Май 2018" "Yenot" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Core.cpp \- Ядро проекта\&. Содержит все главные и вспомогательные функции для определения марки автомобиля  

.SH SYNOPSIS
.br
.PP
\fC#include <Windows\&.h>\fP
.br
\fC#include <direct\&.h>\fP
.br
\fC#include '\&.\&.\\core\\Yenot\&.h'\fP
.br
\fC#include '\&.\&.\\core\\Core\&.h'\fP
.br
\fC#include '\&.\&.\\io\\Logger\&.h'\fP
.br

.SS "Функции"

.in +1c
.ti -1c
.RI "void \fBnoiseRemoval\fP (const Mat &mat_in, Mat &mat_out)"
.br
.RI "Функция для обработки изображений\&. "
.ti -1c
.RI "void \fBlineDetection\fP (const Mat &mat_in, Mat &mat_out)"
.br
.RI "Функция для обработки изображений\&. "
.ti -1c
.RI "void \fBdatabaseAdd\fP (string filename)"
.br
.ti -1c
.RI "void \fBclearning\fP (string filename, string variable)"
.br
.ti -1c
.RI "bool \fBdetectionLogo\fP (const Mat &mat_logo, string cascadefile)"
.br
.ti -1c
.RI "void \fBdetection\fP (const Mat &mat_logo)"
.br
.ti -1c
.RI "string \fBgetSettingsString\fP (char *block, char *value, char *ch_return_default)"
.br
.ti -1c
.RI "int \fBgetSettings\fP (char *block, char *value)"
.br
.ti -1c
.RI "int \fBgetSettings\fP (char *block, char *value, int i_return_default)"
.br
.ti -1c
.RI "void \fBsetSettings\fP (char *block, char *value, char *text)"
.br
.ti -1c
.RI "bool \fBcheckFile\fP (char *filename)"
.br
.ti -1c
.RI "bool \fBcheckFile\fP (string filename)"
.br
.ti -1c
.RI "void \fBsettingsInitialization\fP ()"
.br
.ti -1c
.RI "void \fBcreateFile\fP (char *file_name)"
.br
.RI "Функция для создания файла "
.ti -1c
.RI "void \fBcreateDir\fP (string namedir)"
.br
.RI "Функция для создания директории "
.ti -1c
.RI "string \fBdescription\fP (string value)"
.br
.RI "Функция для поиска описания марки по файлу с каскадом Хаара "
.ti -1c
.RI "void \fBcanny\fP (const Mat &mat_in, Mat &mat_out)"
.br
.RI "Функция для обработки изображений\&. "
.in -1c
.SH "Подробное описание"
.PP 
Ядро проекта\&. Содержит все главные и вспомогательные функции для определения марки автомобиля 


.PP
\fBАвтор:\fP
.RS 4
SavaLione 
.RE
.PP
\fBДата:\fP
.RS 4
12 Apr 2018 
.RE
.PP

.PP
См\&. определение в файле \fBCore\&.cpp\fP
.SH "Функции"
.PP 
.SS "void canny (const Mat & mat_in, Mat & mat_out)"

.PP
Функция для обработки изображений\&. Поиск границ на изображении\&. Метод canny\&.
.PP
\fBАргументы:\fP
.RS 4
\fImat_in\fP Матрица с изображением для обработки 
.br
\fImat_out\fP Матрица с обработанным изображением, которая будет возвращена 
.RE
.PP

.PP
См\&. определение в файле Core\&.cpp строка 274
.SS "bool checkFile (char * filename)"

.PP
См\&. определение в файле Core\&.cpp строка 170
.SS "bool checkFile (string filename)"

.PP
См\&. определение в файле Core\&.cpp строка 179
.SS "void clearning (string filename, string variable)"

.PP
См\&. определение в файле Core\&.cpp строка 85
.SS "void createDir (string namedir)"

.PP
Функция для создания директории 
.PP
\fBАргументы:\fP
.RS 4
\fInamedir\fP Путь и название директории 
.RE
.PP
Если успешно создали директорию, то: 
.PP
.nf
Вывод в лог, что получилось создать директорию

.fi
.PP
.PP
иначе: 
.PP
.nf
Вывод в лог, что не получилось создать директорию

Возможно это связано с тем, что нет прав на создание директории или директория уже есть  
.fi
.PP

.PP
См\&. определение в файле Core\&.cpp строка 235
.SS "void createFile (char * file_name)"

.PP
Функция для создания файла 
.PP
\fBАргументы:\fP
.RS 4
\fIfile_name\fP Путь и название файла 
.RE
.PP

.PP
См\&. определение в файле Core\&.cpp строка 226
.SS "void databaseAdd (string filename)"

.PP
См\&. определение в файле Core\&.cpp строка 69
.SS "string description (string value)"

.PP
Функция для поиска описания марки по файлу с каскадом Хаара 
.PP
\fBАргументы:\fP
.RS 4
\fIvalue\fP Название файла 
.RE
.PP
\fBВозвращает:\fP
.RS 4
Искомое описание марки 
.RE
.PP

.PP
См\&. определение в файле Core\&.cpp строка 257
.SS "void detection (const Mat & mat_logo)"

.PP
См\&. определение в файле Core\&.cpp строка 124
.SS "bool detectionLogo (const Mat & mat_logo, string cascadefile)"

.PP
См\&. определение в файле Core\&.cpp строка 100
.SS "int getSettings (char * block, char * value)"

.PP
См\&. определение в файле Core\&.cpp строка 158
.SS "int getSettings (char * block, char * value, int i_return_default)"

.PP
См\&. определение в файле Core\&.cpp строка 162
.SS "string getSettingsString (char * block, char * value, char * ch_return_default)"

.PP
См\&. определение в файле Core\&.cpp строка 152
.SS "void lineDetection (const Mat & mat_in, Mat & mat_out)"

.PP
Функция для обработки изображений\&. Проверяет, нужно ли находить линии на изображении\&.
.PP
Также проверяем режим обработки изображений\&. Быстрый или нет\&.
.PP
Для обычного режима используется - canny(mat_in, mat_out);
.PP
\fBАргументы:\fP
.RS 4
\fImat_in\fP Матрица с изображением для обработки 
.br
\fImat_out\fP Матрица с обработанным изображением, которая будет возвращена 
.RE
.PP

.PP
См\&. определение в файле Core\&.cpp строка 61
.SS "void noiseRemoval (const Mat & mat_in, Mat & mat_out)"

.PP
Функция для обработки изображений\&. Проверяет, нужно ли убирать шум на фотографиях\&.
.PP
Также проверяем режим обработки изображений\&. Быстрый или нет\&.
.PP
Для обычного режима используется двусторонний фильтр - bilateralFilter();
.PP
Для быстрого режима используется Гауссовый фильтр размытия изображений - GaussianBlur();
.PP
\fBАргументы:\fP
.RS 4
\fImat_in\fP Матрица с изображением для обработки 
.br
\fImat_out\fP Матрица с обработанным изображением, которая будет возвращена 
.RE
.PP

.PP
См\&. определение в файле Core\&.cpp строка 35
.SS "void setSettings (char * block, char * value, char * text)"

.PP
См\&. определение в файле Core\&.cpp строка 166
.SS "void settingsInitialization ()"

.PP
См\&. определение в файле Core\&.cpp строка 189
.SH "Автор"
.PP 
Автоматически создано Doxygen для Yenot из исходного текста\&.
