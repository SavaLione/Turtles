<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="_core_8h" kind="file" language="C++">
    <compoundname>Core.h</compoundname>
    <includes local="no">opencv2/opencv.hpp</includes>
    <includedby refid="_core_8cpp" local="yes">Core.cpp</includedby>
    <includedby refid="_yenot_database_8cpp" local="yes">YenotDatabase.cpp</includedby>
    <includedby refid="_yenot_8cpp" local="yes">Yenot.cpp</includedby>
    <incdepgraph>
      <node id="11">
        <label>opencv2/opencv.hpp</label>
      </node>
      <node id="10">
        <label>Core.h</label>
        <link refid="_core_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="12">
        <label>Core.h</label>
        <link refid="_core_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>Core.cpp</label>
        <link refid="_core_8cpp"/>
      </node>
      <node id="15">
        <label>Yenot.cpp</label>
        <link refid="_yenot_8cpp"/>
      </node>
      <node id="14">
        <label>YenotDatabase.cpp</label>
        <link refid="_yenot_database_8cpp"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__coreh_1ga438c92819ed0ad4fc2e187ed5f5a2e27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void noiseRemoval</definition>
        <argsstring>(const cv::Mat &amp;mat_in, cv::Mat &amp;mat_out)</argsstring>
        <name>noiseRemoval</name>
        <param>
          <type>const cv::Mat &amp;</type>
          <declname>mat_in</declname>
        </param>
        <param>
          <type>cv::Mat &amp;</type>
          <declname>mat_out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Core.h" line="20" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__coreh_1gaa7c37c22318217cd913a50800eb336a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lineDetection</definition>
        <argsstring>(const cv::Mat &amp;mat_in, cv::Mat &amp;mat_out)</argsstring>
        <name>lineDetection</name>
        <param>
          <type>const cv::Mat &amp;</type>
          <declname>mat_in</declname>
        </param>
        <param>
          <type>cv::Mat &amp;</type>
          <declname>mat_out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Core.h" line="21" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__coreh_1ga5a4a30ca6128e13ce1ec6efaa23dd6c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void databaseAdd</definition>
        <argsstring>(std::string filename)</argsstring>
        <name>databaseAdd</name>
        <param>
          <type>std::string</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Core.h" line="22" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__coreh_1gaebd676a1476aa4d75b280db8ae09d11c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void clearning</definition>
        <argsstring>(std::string filename, std::string variable)</argsstring>
        <name>clearning</name>
        <param>
          <type>std::string</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>variable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Core.h" line="23" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__coreh_1gad1ae53e92ff9edcee7a9f35d2956ae57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool detectionLogo</definition>
        <argsstring>(const cv::Mat &amp;mat_logo, std::string cascadefile)</argsstring>
        <name>detectionLogo</name>
        <param>
          <type>const cv::Mat &amp;</type>
          <declname>mat_logo</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>cascadefile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Core.h" line="24" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__coreh_1ga0ef39a5ada0921b3abf8906957746b86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void detection</definition>
        <argsstring>(const cv::Mat &amp;mat_logo)</argsstring>
        <name>detection</name>
        <param>
          <type>const cv::Mat &amp;</type>
          <declname>mat_logo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Core.h" line="25" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__coreh_1gaff2d42310702a0aab15af5ad62a59f2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void canny</definition>
        <argsstring>(const cv::Mat &amp;mat_in, cv::Mat &amp;mat_out)</argsstring>
        <name>canny</name>
        <param>
          <type>const cv::Mat &amp;</type>
          <declname>mat_in</declname>
        </param>
        <param>
          <type>cv::Mat &amp;</type>
          <declname>mat_out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Core.h" line="30" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__coreh_1ga242d25c7a9a1b7212bb890023c8131f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void settingsInitialization</definition>
        <argsstring>()</argsstring>
        <name>settingsInitialization</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Core.h" line="35" column="1" bodyfile="src/core/Core.cpp" bodystart="158" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="group__coreh_1gaad0390ab7aa8f0cac1eee4492e919baf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string description</definition>
        <argsstring>(std::string value)</argsstring>
        <name>description</name>
        <param>
          <type>std::string</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Core.h" line="36" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Ядро проекта. Содержит все главные и вспомогательные функции для определения марки автомобиля </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>SavaLione </para></simplesect>
<simplesect kind="date"><para>12 Apr 2018 </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="12"><highlight class="preprocessor">#ifndef<sp/>CORE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CORE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;opencv2/opencv.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="comment">//<sp/><sp/>Core</highlight></codeline>
<codeline lineno="20"><highlight class="comment"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__coreh_1ga438c92819ed0ad4fc2e187ed5f5a2e27" kindref="member">noiseRemoval</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cv::Mat&amp;<sp/>mat_in,<sp/>cv::Mat&amp;<sp/>mat_out);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__coreh_1gaa7c37c22318217cd913a50800eb336a3" kindref="member">lineDetection</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cv::Mat&amp;<sp/>mat_in,<sp/>cv::Mat&amp;<sp/>mat_out);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__coreh_1ga5a4a30ca6128e13ce1ec6efaa23dd6c7" kindref="member">databaseAdd</ref>(std::string<sp/>filename);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__coreh_1gaebd676a1476aa4d75b280db8ae09d11c" kindref="member">clearning</ref>(std::string<sp/>filename,<sp/>std::string<sp/>variable);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__coreh_1gad1ae53e92ff9edcee7a9f35d2956ae57" kindref="member">detectionLogo</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cv::Mat&amp;<sp/>mat_logo,<sp/>std::string<sp/>cascadefile);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__coreh_1ga0ef39a5ada0921b3abf8906957746b86" kindref="member">detection</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cv::Mat&amp;<sp/>mat_logo);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="comment">//<sp/><sp/>Line<sp/>detector</highlight></codeline>
<codeline lineno="30"><highlight class="comment"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__coreh_1gaff2d42310702a0aab15af5ad62a59f2b" kindref="member">canny</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cv::Mat&amp;<sp/>mat_in,<sp/>cv::Mat&amp;<sp/>mat_out);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="comment">//<sp/><sp/>Settings</highlight></codeline>
<codeline lineno="35"><highlight class="comment"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__coreh_1ga242d25c7a9a1b7212bb890023c8131f5" kindref="member">settingsInitialization</ref>();</highlight></codeline>
<codeline lineno="36"><highlight class="normal">std::string<sp/><ref refid="group__coreh_1gaad0390ab7aa8f0cac1eee4492e919baf" kindref="member">description</ref>(std::string<sp/>value);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>CORE_H</highlight></codeline>
    </programlisting>
    <location file="src/core/Core.h"/>
  </compounddef>
</doxygen>
