<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="namespaceyenot" kind="namespace" language="C++">
    <compoundname>yenot</compoundname>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespaceyenot_1adc33110d5c91abdee044c45cd5c725b1" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char yenot::settings_file_name[]</definition>
        <argsstring>[]</argsstring>
        <name>settings_file_name</name>
        <initializer>= &quot;./config.ini&quot;</initializer>
        <briefdescription>
<para>Файл с настройками </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Yenot.h" line="33" column="1" bodyfile="src/core/Yenot.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceyenot_1ab82af39640477c63378716f6699d49fe" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char yenot::logger_file_name[]</definition>
        <argsstring>[]</argsstring>
        <name>logger_file_name</name>
        <initializer>= &quot;Yenot.log&quot;</initializer>
        <briefdescription>
<para>Файл с логами </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Yenot.h" line="36" column="1" bodyfile="src/core/Yenot.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceyenot_1ac18180ab326731ce58145fe9049c49b9" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char yenot::database_file_name[]</definition>
        <argsstring>[]</argsstring>
        <name>database_file_name</name>
        <initializer>= &quot;database.xml&quot;</initializer>
        <briefdescription>
<para>Файл, в котором хранятся </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Yenot.h" line="39" column="1" bodyfile="src/core/Yenot.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceyenot_1a5c402b62f742f34e9e42756075df6ed2" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char yenot::database_name[]</definition>
        <argsstring>[]</argsstring>
        <name>database_name</name>
        <initializer>= &quot;database&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Yenot.h" line="42" column="1" bodyfile="src/core/Yenot.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceyenot_1a33ac96c1605ea0acb1f29aaf1ace51da" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char yenot::extensions_database_member[]</definition>
        <argsstring>[]</argsstring>
        <name>extensions_database_member</name>
        <initializer>= &quot;.xml&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Расширение для хранения данных</para><para>Поддерживается xml и yaml </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Yenot.h" line="47" column="1" bodyfile="src/core/Yenot.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceyenot_1aad9119112273f919a9be40dd3cd6f883" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char yenot::extensions_database_member_photo[]</definition>
        <argsstring>[]</argsstring>
        <name>extensions_database_member_photo</name>
        <initializer>= &quot;.png&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Расширение для хранения фотографий</para><para>Поддерживается png jpg jpeg </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Yenot.h" line="52" column="1" bodyfile="src/core/Yenot.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceyenot_1adc382d9413986f36649df4f983cf1ebe" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int yenot::buffer_size</definition>
        <argsstring></argsstring>
        <name>buffer_size</name>
        <initializer>= 128</initializer>
        <briefdescription>
<para>Стандартный размер буфера </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Yenot.h" line="55" column="1" bodyfile="src/core/Yenot.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceyenot_1a2640b6ef7faaea51fd49edfd377c62a5" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char yenot::settings_block_core[]</definition>
        <argsstring>[]</argsstring>
        <name>settings_block_core</name>
        <initializer>= &quot;Core&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Yenot.h" line="60" column="1" bodyfile="src/core/Yenot.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceyenot_1a2c183b5b1119e19804dce22eaad06010" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char yenot::settings_block_default[]</definition>
        <argsstring>[]</argsstring>
        <name>settings_block_default</name>
        <initializer>= &quot;General&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Yenot.h" line="61" column="1" bodyfile="src/core/Yenot.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceyenot_1a49273bc3609e4a1d9c1a3e4a5cfcdafd" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char yenot::settings_fastmode[]</definition>
        <argsstring>[]</argsstring>
        <name>settings_fastmode</name>
        <initializer>= &quot;fMode&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Yenot.h" line="63" column="1" bodyfile="src/core/Yenot.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceyenot_1a860366d2b9aa9cf0d9cdcaf58528c101" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char yenot::settings_fastmode_value[]</definition>
        <argsstring>[]</argsstring>
        <name>settings_fastmode_value</name>
        <initializer>= &quot;0&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Yenot.h" line="64" column="1" bodyfile="src/core/Yenot.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceyenot_1aee49fb849c0951972cdac7466599314a" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int yenot::settings_fastmode_value_int</definition>
        <argsstring></argsstring>
        <name>settings_fastmode_value_int</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Yenot.h" line="65" column="1" bodyfile="src/core/Yenot.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceyenot_1a50716fcb731614c596c51676324c11e5" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char yenot::settings_noiseReduction[]</definition>
        <argsstring>[]</argsstring>
        <name>settings_noiseReduction</name>
        <initializer>= &quot;nReduction&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Yenot.h" line="67" column="1" bodyfile="src/core/Yenot.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceyenot_1ae03e5eafa7f7253bce5126abe8575bfd" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char yenot::settings_noiseReduction_value[]</definition>
        <argsstring>[]</argsstring>
        <name>settings_noiseReduction_value</name>
        <initializer>= &quot;1&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Yenot.h" line="68" column="1" bodyfile="src/core/Yenot.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceyenot_1aa228b5315065090d02dadbf128ba3d33" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int yenot::settings_noiseReduction_value_int</definition>
        <argsstring></argsstring>
        <name>settings_noiseReduction_value_int</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Yenot.h" line="69" column="1" bodyfile="src/core/Yenot.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceyenot_1a9e0a7decaab1ac67fda9bba816d240ad" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char yenot::settings_machineLearning[]</definition>
        <argsstring>[]</argsstring>
        <name>settings_machineLearning</name>
        <initializer>= &quot;mLearning&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Yenot.h" line="71" column="1" bodyfile="src/core/Yenot.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceyenot_1ac24f2700516e72d7abda843c90ea197d" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char yenot::settings_machineLearning_value[]</definition>
        <argsstring>[]</argsstring>
        <name>settings_machineLearning_value</name>
        <initializer>= &quot;1&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Yenot.h" line="72" column="1" bodyfile="src/core/Yenot.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceyenot_1a14d42f7507a42b87ff62a9dc822c0af8" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int yenot::settings_machineLearning_value_int</definition>
        <argsstring></argsstring>
        <name>settings_machineLearning_value_int</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Yenot.h" line="73" column="1" bodyfile="src/core/Yenot.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceyenot_1a49dc5e175f5b81894abe218db8949a89" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char yenot::settings_lineDetection[]</definition>
        <argsstring>[]</argsstring>
        <name>settings_lineDetection</name>
        <initializer>= &quot;lDetection&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Yenot.h" line="75" column="1" bodyfile="src/core/Yenot.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceyenot_1a300cc5d9afdbc58876cf3b52a2d9f055" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char yenot::settings_lineDetection_value[]</definition>
        <argsstring>[]</argsstring>
        <name>settings_lineDetection_value</name>
        <initializer>= &quot;1&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Yenot.h" line="76" column="1" bodyfile="src/core/Yenot.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceyenot_1ae8c5d5792720627ea225afb6ee387915" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int yenot::settings_lineDetection_value_int</definition>
        <argsstring></argsstring>
        <name>settings_lineDetection_value_int</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Yenot.h" line="77" column="1" bodyfile="src/core/Yenot.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceyenot_1a17fec4b53b47f434f720ad8e804e3497" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char yenot::use_detection[]</definition>
        <argsstring>[]</argsstring>
        <name>use_detection</name>
        <initializer>= &quot;detection&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Yenot.h" line="79" column="1" bodyfile="src/core/Yenot.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceyenot_1affbdf7e1315bdd3e0c9f7bb5d1b0a9b1" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char yenot::use_detection_value[]</definition>
        <argsstring>[]</argsstring>
        <name>use_detection_value</name>
        <initializer>= &quot;1&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Yenot.h" line="80" column="1" bodyfile="src/core/Yenot.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceyenot_1a8ba9c1f83b4502a37417a016875a3918" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int yenot::use_detection_value_int</definition>
        <argsstring></argsstring>
        <name>use_detection_value_int</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Yenot.h" line="81" column="1" bodyfile="src/core/Yenot.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceyenot_1ab35e22cfa0a4ef6c8e960cfa75873aa0" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char yenot::save_processed_image[]</definition>
        <argsstring>[]</argsstring>
        <name>save_processed_image</name>
        <initializer>= &quot;sImage&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Yenot.h" line="83" column="1" bodyfile="src/core/Yenot.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceyenot_1ace3fd31c709279dc1bb3450404d770b0" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char yenot::save_processed_image_value[]</definition>
        <argsstring>[]</argsstring>
        <name>save_processed_image_value</name>
        <initializer>= &quot;0&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Yenot.h" line="84" column="1" bodyfile="src/core/Yenot.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceyenot_1accc48c2808f0c8c98f853614c546b5eb" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int yenot::save_processed_image_value_int</definition>
        <argsstring></argsstring>
        <name>save_processed_image_value_int</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Yenot.h" line="85" column="1" bodyfile="src/core/Yenot.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceyenot_1afe93bb98a5b2fd1f0cab330e4da59332" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char yenot::save_processed_image_name[]</definition>
        <argsstring>[]</argsstring>
        <name>save_processed_image_name</name>
        <initializer>= &quot;test.png&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Yenot.h" line="86" column="1" bodyfile="src/core/Yenot.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceyenot_1a6c5730ae743bc1203438dfcf6f35faeb" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int yenot::diameter_each_pixel</definition>
        <argsstring></argsstring>
        <name>diameter_each_pixel</name>
        <initializer>= 9</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Yenot.h" line="91" column="1" bodyfile="src/core/Yenot.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceyenot_1a54032afcd8390f4a4975bbf20ffa248c" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int yenot::sigmaColor</definition>
        <argsstring></argsstring>
        <name>sigmaColor</name>
        <initializer>= 75</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Yenot.h" line="92" column="1" bodyfile="src/core/Yenot.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceyenot_1adbbb6d50f7db1942c60be8b5d621d3b7" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int yenot::sigmaSpace</definition>
        <argsstring></argsstring>
        <name>sigmaSpace</name>
        <initializer>= 75</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Yenot.h" line="93" column="1" bodyfile="src/core/Yenot.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceyenot_1a7b716ae635492024820f16eb8c04a385" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int yenot::gaussianblur_kernel_x</definition>
        <argsstring></argsstring>
        <name>gaussianblur_kernel_x</name>
        <initializer>= 5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Фильтр Гаусса. Размер ядра по x</para><para>Число не чётное </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Yenot.h" line="98" column="1" bodyfile="src/core/Yenot.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceyenot_1a9f129e682fdc00d2869d4ed69a4c6aa7" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int yenot::gaussianblur_kernel_y</definition>
        <argsstring></argsstring>
        <name>gaussianblur_kernel_y</name>
        <initializer>= 5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Фильтр Гаусса. Размер ядра по x</para><para>Число не чётное </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Yenot.h" line="103" column="1" bodyfile="src/core/Yenot.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceyenot_1a1b60119efa619ee2a1a927d430e984d2" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int yenot::blur_kernel_x</definition>
        <argsstring></argsstring>
        <name>blur_kernel_x</name>
        <initializer>= 5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Размытие. Размер ядра по x</para><para>Число не чётное </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Yenot.h" line="108" column="1" bodyfile="src/core/Yenot.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceyenot_1ad178c04ee8518b1553ee1ab5b5054712" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int yenot::blur_kernel_y</definition>
        <argsstring></argsstring>
        <name>blur_kernel_y</name>
        <initializer>= 5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Размытие. Размер ядра по x</para><para>Число не чётное </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Yenot.h" line="113" column="1" bodyfile="src/core/Yenot.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceyenot_1a13c8b24e2bbaab0c3bf3fe14e3f495bb" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char yenot::settings_block_logger[]</definition>
        <argsstring>[]</argsstring>
        <name>settings_block_logger</name>
        <initializer>= &quot;Logger&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Yenot.h" line="118" column="1" bodyfile="src/core/Yenot.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceyenot_1ad8a7ef4466cc151f6f380b4c4ccbfa66" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char yenot::settings_log[]</definition>
        <argsstring>[]</argsstring>
        <name>settings_log</name>
        <initializer>= &quot;log&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Yenot.h" line="120" column="1" bodyfile="src/core/Yenot.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceyenot_1a8e18cd22c222abdaffa0e12b65af2ac5" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char yenot::settings_log_value[]</definition>
        <argsstring>[]</argsstring>
        <name>settings_log_value</name>
        <initializer>= &quot;1&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Yenot.h" line="121" column="1" bodyfile="src/core/Yenot.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceyenot_1af1e97f87e798dc626f1a437f23b42199" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char yenot::settings_logTime[]</definition>
        <argsstring>[]</argsstring>
        <name>settings_logTime</name>
        <initializer>= &quot;lTime&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Yenot.h" line="123" column="1" bodyfile="src/core/Yenot.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceyenot_1aa1103de8317b20c60b2ae5da7e05f2b3" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char yenot::settings_logTime_value[]</definition>
        <argsstring>[]</argsstring>
        <name>settings_logTime_value</name>
        <initializer>= &quot;1&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Yenot.h" line="124" column="1" bodyfile="src/core/Yenot.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceyenot_1ab09d0dabe8840893fe9dc4a855ffc2fa" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char yenot::logger_level_warning[]</definition>
        <argsstring>[]</argsstring>
        <name>logger_level_warning</name>
        <initializer>= &quot;WARN&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Yenot.h" line="126" column="1" bodyfile="src/core/Yenot.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceyenot_1a9624d76c2385fbb9861e403225b1d698" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char yenot::logger_level_error[]</definition>
        <argsstring>[]</argsstring>
        <name>logger_level_error</name>
        <initializer>= &quot;ERROR&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Yenot.h" line="127" column="1" bodyfile="src/core/Yenot.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceyenot_1a536380830aa21975126348216a729b08" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char yenot::logger_level_message[]</definition>
        <argsstring>[]</argsstring>
        <name>logger_level_message</name>
        <initializer>= &quot;MSG&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Yenot.h" line="128" column="1" bodyfile="src/core/Yenot.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceyenot_1a27e7d588bfc41ad2d47d044d4541dad5" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char yenot::logger_message_noiseRemoval[]</definition>
        <argsstring>[]</argsstring>
        <name>logger_message_noiseRemoval</name>
        <initializer>= &quot;Noise filter is disabled.&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Yenot.h" line="133" column="1" bodyfile="src/core/Yenot.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceyenot_1a7ba035b0bd5ec0ca88a1741671cf6818" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char yenot::logger_message_lDetection[]</definition>
        <argsstring>[]</argsstring>
        <name>logger_message_lDetection</name>
        <initializer>= &quot;Line <ref refid="_core_8h_1a0ef39a5ada0921b3abf8906957746b86" kindref="member">detection</ref> is disabled.&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Yenot.h" line="134" column="1" bodyfile="src/core/Yenot.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceyenot_1a5cb3756995a6e5a93819405ca99eb35a" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char yenot::logger_message_fMode[]</definition>
        <argsstring>[]</argsstring>
        <name>logger_message_fMode</name>
        <initializer>= &quot;Fast mode enabled.&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Yenot.h" line="135" column="1" bodyfile="src/core/Yenot.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceyenot_1a674d34d95501a1071db0ac7b39c64f57" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char yenot::logger_message_cDir[]</definition>
        <argsstring>[]</argsstring>
        <name>logger_message_cDir</name>
        <initializer>= &quot;Folder created.&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Yenot.h" line="136" column="1" bodyfile="src/core/Yenot.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceyenot_1a16669256cbc1918ac8500a364e0ba21d" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char yenot::logger_message_cDir_not[]</definition>
        <argsstring>[]</argsstring>
        <name>logger_message_cDir_not</name>
        <initializer>= &quot;Folder not created.&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Yenot.h" line="137" column="1" bodyfile="src/core/Yenot.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceyenot_1ab685b9f0b8baadc950b69329d1fae577" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char yenot::settings_block_carModel[]</definition>
        <argsstring>[]</argsstring>
        <name>settings_block_carModel</name>
        <initializer>= &quot;carmodel&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Yenot.h" line="142" column="1" bodyfile="src/core/Yenot.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceyenot_1a0a2414e62514c20e76cf0c522ebf38a3" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char yenot::settings_carModel_listphoto[]</definition>
        <argsstring>[]</argsstring>
        <name>settings_carModel_listphoto</name>
        <initializer>= &quot;listphoto&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Yenot.h" line="143" column="1" bodyfile="src/core/Yenot.h" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceyenot_1af238d0e227de22ee3c26114077153efc" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char yenot::settings_carModel_example[]</definition>
        <argsstring>[]</argsstring>
        <name>settings_carModel_example</name>
        <initializer>= &quot;example&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Yenot.h" line="145" column="1" bodyfile="src/core/Yenot.h" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceyenot_1a5f4aa342b4a3e3f87069f6fef812594a" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char yenot::settings_carModel_example_description[]</definition>
        <argsstring>[]</argsstring>
        <name>settings_carModel_example_description</name>
        <initializer>= &quot;The car of model \&quot;Example\&quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Yenot.h" line="146" column="1" bodyfile="src/core/Yenot.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceyenot_1acd910e59eb17aa18802af8f4544aab48" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char yenot::settings_carModel_example_file[]</definition>
        <argsstring>[]</argsstring>
        <name>settings_carModel_example_file</name>
        <initializer>= &quot;example.xml&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Yenot.h" line="147" column="1" bodyfile="src/core/Yenot.h" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceyenot_1aea7e9eb4d5b9e645f22e83e2d5fe893e" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char yenot::settings_block_description[]</definition>
        <argsstring>[]</argsstring>
        <name>settings_block_description</name>
        <initializer>= &quot;description&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Yenot.h" line="149" column="1" bodyfile="src/core/Yenot.h" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceyenot_1a53b4bd62fd7a6e3abedfdfb47db53284" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char yenot::settings_description_ifnotfound[]</definition>
        <argsstring>[]</argsstring>
        <name>settings_description_ifnotfound</name>
        <initializer>= &quot;Not found&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Yenot.h" line="150" column="1" bodyfile="src/core/Yenot.h" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceyenot_1a37f90b0081fe0617055470d46489ea0f" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char yenot::settings_description_example[]</definition>
        <argsstring>[]</argsstring>
        <name>settings_description_example</name>
        <initializer>= &quot;Example brand&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Yenot.h" line="151" column="1" bodyfile="src/core/Yenot.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceyenot_1a4e9a58fa114bcb3d3ae09fb62129f2c9" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int yenot::settings_size_photo</definition>
        <argsstring></argsstring>
        <name>settings_size_photo</name>
        <initializer>= 512</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/Yenot.h" line="153" column="1" bodyfile="src/core/Yenot.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Пространство имён с константами </para>    </briefdescription>
    <detaileddescription>
<para>General - Основные константы</para><para>Core - Ядро</para><para>Filters - Фильтры</para><para>Logger - Модуль логирования</para><para>Log messages - Сообщения для вывода в логами</para><para>Car model - Пример </para>    </detaileddescription>
    <location file="src/core/Yenot.h" line="27" column="1"/>
  </compounddef>
</doxygen>
